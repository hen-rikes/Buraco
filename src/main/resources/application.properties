# A porta que a Render vai usar. A Render define a variável PORT.
server.port=${PORT:8080}

# A URL do banco de dados será injetada pela Render como uma variável de ambiente.
# Este valor é apenas um placeholder e não será usado se a variável estiver definida.
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/buracodb}

# Configurações do JPA para usar o dialeto do PostgreSQL e atualizar o schema.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Opcional: Mostrar SQL no console de logs da Render (bom para debug).
spring.jpa.show-sql=true

# Configuração para upload de arquivos
# Em um ambiente de contêiner como o da Render, o sistema de arquivos é efêmero.
# O ideal para produção seria usar um serviço de storage como AWS S3 ou Cloudinary.
# Para este projeto, o upload local no contêiner funcionará, mas os arquivos serão perdidos se o serviço reiniciar.
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB