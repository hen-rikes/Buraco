# A porta que a Render vai usar, com um padrão para rodar localmente.
server.port=${PORT:8080}

# --- CONFIGURAÇÃO DO BANCO DE DADOS (FORMA ROBUSTA E EXPLÍCITA) ---

# 1. URL de conexão SEM o usuário e a senha.
spring.datasource.url=${SPRING_DATASOURCE_URL}

# 2. Usuário do banco de dados.
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}

# 3. Senha do banco de dados.
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# 4. Linha Adicional: Informa explicitamente qual "tradutor" (driver) usar.
spring.datasource.driver-class-name=org.postgresql.Driver

# --- Configurações do JPA ---
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Opcional: Mostrar SQL no console de logs da Render (bom para debug).
spring.jpa.show-sql=true

# Configuração para upload de arquivos
# Em um ambiente de contêiner como o da Render, o sistema de arquivos é efêmero.
# O ideal para produção seria usar um serviço de storage como AWS S3 ou Cloudinary.
# Para este projeto, o upload local no contêiner funcionará, mas os arquivos serão perdidos se o serviço reiniciar.
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB